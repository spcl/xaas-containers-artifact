/usr/local/gromacs/bin/gmx_mpi: /usr/lib/aarch64-linux-gnu/libnl-3.so.200: no version information available (required by /usr/lib64/libcxi.so.1)
                      :-) GROMACS - gmx mdrun, 2025.0 (-:

Executable:   /usr/local/gromacs/bin/gmx_mpi
Data prefix:  /usr/local/gromacs
Working dir:  /iopsstor/scratch/cscs/ealnuaim/gromacs_benchmarks/TestcaseB_benchmarks/gromacs_testcase3_testcaseB/run_37
Command line:
  gmx_mpi mdrun -s /iopsstor/scratch/cscs/ealnuaim/GROMACS_TestCaseB/lignocellulose.tpr -ntomp 64 -bonded gpu -nb gpu -pin on -v -noconfout -dlb yes -nstlist 300 -gpu_id 0 -nsteps 300

Reading file /iopsstor/scratch/cscs/ealnuaim/GROMACS_TestCaseB/lignocellulose.tpr, VERSION 2020.1 (single precision)
Note: file tpx version 119, software tpx version 137
Overriding nsteps with value passed on the command line: 300 steps, 0.6 ps
Changing nstlist from 10 to 300, rlist from 1.262 to 2.416


Update groups can not be used for this system because there are three or more consecutively coupled constraints

GPU-aware MPI was not detected, will not use direct GPU communication. Check the GROMACS install guide for recommendations for GPU-aware support. If you are certain about GPU-aware support in your MPI library, you can force its use by setting the GMX_FORCE_GPU_AWARE_MPI environment variable.

1 GPU selected for this run.
Mapping of GPU IDs to the 1 GPU task in the 1 rank on this node:
  PP:0
PP tasks will do (non-perturbed) short-ranged and most bonded interactions on the GPU
PP task will update and constrain coordinates on the GPU
Using 1 MPI process
Using 64 OpenMP threads 

starting mdrun ''
300 steps,      0.6 ps.
step 0step 100step 200step 300, remaining wall clock time:     0 s          
               Core t (s)   Wall t (s)        (%)
       Time:      200.482        3.135     6394.0
                 (ns/day)    (hour/ns)
Performance:       16.589        1.447

GROMACS reminds you: "I Caught It In the Face" (P.J. Harvey)

